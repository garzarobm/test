services:
    opc-router:
        image: opcrouter/runtime:latest
        restart: unless-stopped
        ports:
        - "49420:49420"
        - "8080:8080"
        - "8081:8081"
    environment:
        - OR_I_ACCEPT_EULA=${OR_I_ACCEPT_EULA}
        - INITIAL_USERNAME=${INITIAL_USERNAME}
        - INITIAL_PASSWORD=${INITIAL_PASSWORD}
    volumes:
        - type: volume
        source: opcrouter-configdb
        target: /data/database
        - type: volume
        source: opcrouter-inray
        target: /inray
        - type: volume
        source: opcrouter-logs
        target: /var/log/opcrouter
        - type: volume
        source: opcrouter-data
        target: /data/opcrouter
        - type: bind
        source: /Volume1/docker/volumes/opc/opcrouter-data
        target: /data/opcrouter
        - type: bind
        source: /Volume1/docker/volumes/opc/configdb
        target: /data/database
        - type: bind
        source: /Volume1/docker/volumes/opc/opcrouter-inray
        target: /inray
        - type: bind
        source: /Volume1/docker/volumes/opc/opcrouter-logs
        target: /var/log/opcrouter
version: '3.8'
# docker-compose.yml
# This file is used to define and run multi-container Docker applications.
# It specifies the services, networks, and volumes for the application.
services:
  opc-router:
    image: opcrouter/runtime:latest
    restart: unless-stopped
    ports:
      - "49420:49420"
      - "8080:8080"
      - "8081:8081"
    environment:
      - OR_I_ACCEPT_EULA=${OR_I_ACCEPT_EULA}
      - INITIAL_USERNAME=${INITIAL_USERNAME}
      - INITIAL_PASSWORD=${INITIAL_PASSWORD}

    # Bind mounts for persistent data
      - /Volume1/docker/volumes/opc/opcrouter-data:/data/opcrouter
      - /Volume1/docker/volumes/opc/configdb:/data/database
      - /Volume1/docker/volumes/opc/opcrouter-inray:/inray
      - /Volume1/docker/volumes/opc/logs:/var/log/opcrouter
# This file is used to define and run multi-container Docker applications.
# It specifies the services, networks, and volumes for the application.
# It is recommended to use version '3.8' or higher for better compatibility.
# Ensure that the environment variables are set in your .env file or in your shell.
# The environment variables OR_I_ACCEPT_EULA, INITIAL_USERNAME, and INITIAL_PASSWORD
# should be defined to accept the EULA and set initial credentials for the OPC Router.
# The volumes are defined to persist data across container restarts.
# The bind mounts are used to map host directories to container directories for persistent storage.
# The ports are mapped to allow access to the OPC Router services from outside the container.
# The restart policy is set to 'unless-stopped' to ensure the container restarts unless explicitly stopped.
# The image used is the latest version of the OPC Router runtime.
# Ensure that the Docker daemon is running and you have the necessary permissions to run Docker commands.      

# The Docker Compose file is structured to provide a clear and organized way to manage the OPC Router service.
# Ensure that the Docker daemon is running and you have the necessary permissions to run Docker commands.
# Volumes are defined to persist data across container restarts.
volumes:
  opcrouter-configdb:
    driver: local
  opcrouter-inray:
    driver: local
  opcrouter-logs:
    driver: local
  opcrouter-data:
    driver: local
# The volumes are defined to persist data across container restarts.
# The driver 'local' is used to store the data on the host machine.